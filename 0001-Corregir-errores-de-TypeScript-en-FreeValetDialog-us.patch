From cd12e66cda0464de54de409b933fa351408d3bdd Mon Sep 17 00:00:00 2001
From: juance <juance.2@gmail.com>
Date: Fri, 18 Apr 2025 13:07:39 -0300
Subject: [PATCH] Corregir errores de TypeScript en FreeValetDialog,
 usePickupOrdersLogic y useDashboardData

---
 src/components/ticket/FreeValetDialog.tsx |  9 +++++----
 src/hooks/useDashboardData.tsx            |  4 ++--
 src/hooks/usePickupOrdersLogic.ts         | 13 ++++++-------
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/components/ticket/FreeValetDialog.tsx b/src/components/ticket/FreeValetDialog.tsx
index dfd616f..563772c 100644
--- a/src/components/ticket/FreeValetDialog.tsx
+++ b/src/components/ticket/FreeValetDialog.tsx
@@ -49,15 +49,16 @@ export const FreeValetDialog: React.FC<FreeValetDialogProps> = ({
           <AlertDialogAction onClick={async () => {
             if (foundCustomer) {
               // Llamar al servicio para usar un valet gratis
-              const success = await useCustomerFreeValet(foundCustomer.id, foundCustomer);
-
-              if (success) {
+              const { useFreeValet } = useCustomerFreeValet(foundCustomer.id, () => {
                 setUseFreeValet(true);
                 onOpenChange(false);
                 // Al usar valet gratis, forzamos cantidad 1
                 setValetQuantity(1);
                 toast.success('Valet gratis aplicado al ticket');
-              } else {
+              });
+              const success = await useFreeValet();
+
+              if (!success) {
                 // Si falla, no aplicamos el valet gratis
                 setUseFreeValet(false);
                 onOpenChange(false);
diff --git a/src/hooks/useDashboardData.tsx b/src/hooks/useDashboardData.tsx
index d8bee2b..c081abc 100644
--- a/src/hooks/useDashboardData.tsx
+++ b/src/hooks/useDashboardData.tsx
@@ -118,8 +118,8 @@ export const useDashboardData = (): UseDashboardDataReturn => {
         // Try to get dry cleaning items
         try {
           // Fetch dry cleaning items for this ticket
-          const dryCleaningItemsData = Array.isArray(ticket.dry_cleaning_items) ? ticket.dry_cleaning_items : [];
-          
+          const dryCleaningItemsData = Array.isArray((ticket as any).dry_cleaning_items) ? (ticket as any).dry_cleaning_items : [];
+
           if (dryCleaningItemsData.length > 0) {
             dryCleaningItemsData.forEach((item: any) => {
               dryCleaningItems[item.name] = (dryCleaningItems[item.name] || 0) + (item.quantity || 1);
diff --git a/src/hooks/usePickupOrdersLogic.ts b/src/hooks/usePickupOrdersLogic.ts
index dd5a69f..e8f37c4 100644
--- a/src/hooks/usePickupOrdersLogic.ts
+++ b/src/hooks/usePickupOrdersLogic.ts
@@ -28,13 +28,12 @@ export const usePickupOrdersLogic = () => {
     retry: 3, // Retry 3 times if there's an error
     retryDelay: 1000, // Wait 1 second between retries
     gcTime: 0, // Modern equivalent to cacheTime which is deprecated
-    onSettled: (data, err) => {
-      if (err) {
-        console.error('Error en la consulta de tickets:', err);
-        toast.error('Error al cargar los tickets');
-      } else if (data) {
-        console.log('Tickets cargados correctamente:', data.length);
-      }
+    onSuccess: (data) => {
+      console.log('Tickets cargados correctamente:', data.length);
+    },
+    onError: (err) => {
+      console.error('Error en la consulta de tickets:', err);
+      toast.error('Error al cargar los tickets');
     }
   });
 
-- 
2.47.1.windows.2

